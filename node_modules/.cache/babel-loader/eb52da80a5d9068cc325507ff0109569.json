{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initAith = {\n  isAuth: false\n};\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: initAith,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n\n    logout(state) {\n      state.isAuth = false;\n    }\n\n  }\n});\nconst initCounter = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = createSlice({\n  name: 'counter',\n  initialState: initCounter,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n\n    decrement(state, action) {\n      state.counter--;\n    },\n\n    increce(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toogle(state, action) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = init, action) => {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === 'INCRESE') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === 'TOGGLE') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n// const rootReducers = combineReducers({\n//   counter: counterReducer,\n//   login: logiReducer,\n// });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer.reducer,\n    auth: authenticationSlice.reducer\n  }\n});\nexport const authActions = authenticationSlice.actions;\nexport const counterActions = counterReducer.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/react/06122021редакс/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initAith","isAuth","authenticationSlice","name","initialState","reducers","login","state","logout","initCounter","counter","showCounter","counterReducer","increment","action","decrement","increce","payload","toogle","store","reducer","auth","authActions","actions","counterActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB;AAIA,MAAMC,mBAAmB,GAAGJ,WAAW,CAAC;AACtCK,EAAAA,IAAI,EAAE,gBADgC;AAEtCC,EAAAA,YAAY,EAAEJ,QAFwB;AAGtCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,MAAN,GAAe,IAAf;AACD,KAHO;;AAIRO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,MAAN,GAAe,KAAf;AACD;;AANO;AAH4B,CAAD,CAAvC;AAYA,MAAMQ,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,CADS;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAApB;AAKA,MAAMC,cAAc,GAAGd,WAAW,CAAC;AACjCK,EAAAA,IAAI,EAAE,SAD2B;AAEjCC,EAAAA,YAAY,EAAEK,WAFmB;AAGjCJ,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,SAAS,CAACN,KAAD,EAAQO,MAAR,EAAgB;AACvBP,MAAAA,KAAK,CAACG,OAAN;AACD,KAHO;;AAIRK,IAAAA,SAAS,CAACR,KAAD,EAAQO,MAAR,EAAgB;AACvBP,MAAAA,KAAK,CAACG,OAAN;AACD,KANO;;AAORM,IAAAA,OAAO,CAACT,KAAD,EAAQO,MAAR,EAAgB;AACrBP,MAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,GAAgBI,MAAM,CAACG,OAAvC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACX,KAAD,EAAQO,MAAR,EAAgB;AACpBP,MAAAA,KAAK,CAACI,WAAN,GAAoB,CAACJ,KAAK,CAACI,WAA3B;AACD;;AAZO;AAHuB,CAAD,CAAlC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAMQ,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAE;AACPV,IAAAA,OAAO,EAAEE,cAAc,CAACQ,OADjB;AAEPC,IAAAA,IAAI,EAAEnB,mBAAmB,CAACkB;AAFnB;AADkB,CAAD,CAA5B;AAMA,OAAO,MAAME,WAAW,GAAGpB,mBAAmB,CAACqB,OAAxC;AACP,OAAO,MAAMC,cAAc,GAAGZ,cAAc,CAACW,OAAtC;AACP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initAith = {\r\n  isAuth: false,\r\n};\r\n\r\nconst authenticationSlice = createSlice({\r\n  name: 'authentication',\r\n  initialState: initAith,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuth = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuth = false;\r\n    },\r\n  },\r\n});\r\nconst initCounter = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\n\r\nconst counterReducer = createSlice({\r\n  name: 'counter',\r\n  initialState: initCounter,\r\n  reducers: {\r\n    increment(state, action) {\r\n      state.counter++;\r\n    },\r\n    decrement(state, action) {\r\n      state.counter--;\r\n    },\r\n    increce(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toogle(state, action) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = init, action) => {\r\n//   if (action.type === 'INCREMENT') {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === 'DECREMENT') {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === 'INCRESE') {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === 'TOGGLE') {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n\r\n// const rootReducers = combineReducers({\r\n//   counter: counterReducer,\r\n//   login: logiReducer,\r\n// });\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer.reducer,\r\n    auth: authenticationSlice.reducer,\r\n  },\r\n});\r\nexport const authActions = authenticationSlice.actions;\r\nexport const counterActions = counterReducer.actions;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}